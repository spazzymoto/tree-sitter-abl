===============================
assignment expression statement
===============================

a = 1.

---

(program
  (expression_statement
    (assignment_expression
      (identifier)
      (primary_expression
        (decimal_integer_literal)))))

===============================
complex assignment expression statement
===============================

a = 1 + 2 - 3.

---

(program
  (expression_statement
    (assignment_expression
      (identifier)
      (binary_expression
        (binary_expression
          (primary_expression
            (decimal_integer_literal))
          (primary_expression
            (decimal_integer_literal)))
        (primary_expression
          (decimal_integer_literal))))))

=================
binary expression
=================

1 + 1.

---

(program
  (expression_statement
    (binary_expression
      (primary_expression
        (decimal_integer_literal))
      (primary_expression
        (decimal_integer_literal)))))

================
unary expression
================

-1.

---

(program
  (expression_statement
    (unary_expression
      (primary_expression
        (decimal_integer_literal)))))

====================
not unary expression
====================

lLogical = NOT TRUE.

---
(program
  (expression_statement
    (assignment_expression
      (identifier)
      (unary_expression
        (kwNOT)
        (primary_expression
          (true
            (kwTRUE)))))))

=======================
assign unary expression
=======================

a = +10.

---

(program
  (expression_statement
    (assignment_expression
      (identifier)
      (unary_expression
        (primary_expression
          (decimal_integer_literal))))))

==========================
assign property expression
==========================

oObject:oSubObject:Property = "Value":U.

---

(program
  (expression_statement
    (assignment_expression
      (property_access
        (primary_expression
          (property_access
            (primary_expression
              (identifier))
            (identifier)))
        (identifier))
      (primary_expression
        (character_literal
          (string_modifier))))))

============================
method invocation expression
============================

cTest = oObject:getCharacterValue().

---

(program
  (expression_statement
    (assignment_expression
      (identifier)
      (primary_expression
        (method_invocation
          (primary_expression
            (identifier))
          (identifier)
          (argument_list))))))

============================
method invocation expression
============================

cTest = oObject:oSubObject:getCharacterValue().

---

(program
  (expression_statement
    (assignment_expression
      (identifier)
      (primary_expression
        (method_invocation
          (primary_expression
            (property_access
              (primary_expression
                (identifier))
              (identifier)))
          (identifier)
          (argument_list))))))
